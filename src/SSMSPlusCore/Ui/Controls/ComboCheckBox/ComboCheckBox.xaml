<UserControl x:Class="SSMSPlusCore.Ui.Controls.ComboCheckBox.ComboCheckBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SSMSPlusCore.Ui.Controls.ComboCheckBox"
             mc:Ignorable="d" 
             d:DesignHeight="50" d:DesignWidth="200"         
             >
    <Control.Resources>
        <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />
    </Control.Resources>

    <Grid x:Name="ComboCheckBoxRoot" DataContext="{Binding ViewModel,RelativeSource={RelativeSource AncestorType={x:Type local:ComboCheckBox}}}">
        <ComboBox
            IsEnabled="{Binding IsEnabled,RelativeSource={RelativeSource AncestorType={x:Type local:ComboCheckBox}}}"
            IsEditable="True"
            IsReadOnly="True"
            ItemsSource="{Binding Items}">
            <ComboBox.ItemContainerStyle>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="0" />
                </Style>
            </ComboBox.ItemContainerStyle>
            <ComboBox.ItemTemplate>
                <DataTemplate DataType="{x:Type local:IComboCheckBoxItem}">
                    <CheckBox 
                        VerticalAlignment="Center" VerticalContentAlignment="Center"
                        Margin="5,0,0,0"
                        Padding="4,2,0,3"
                        BorderThickness="1"
                        Command="{Binding DataContext.CheckOneCommand, ElementName=ComboCheckBoxRoot}"
                        CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"              
                        IsChecked="{Binding IsChecked}" >
                        <TextBlock Text="{Binding Text}" VerticalAlignment="Center" />
                        <CheckBox.Resources>

                            <Style TargetType="Border">
                                <Setter Property="Margin" Value="10" />
                            </Style>

                        </CheckBox.Resources>
                    </CheckBox>
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.Template>
                <ControlTemplate TargetType="ComboBox">

                    <Grid>
                        <ToggleButton  
                        x:Name="ToggleButton" 
                        Grid.Column="2" 
                        IsEnabled="{Binding  Path=IsEnabled,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}"
                        IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="false"                           
                        ClickMode="Press" HorizontalContentAlignment="Left" >
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="18"/>
                                        </Grid.ColumnDefinitions>
                                        <Border
                                          x:Name="Border" 
                                          Grid.ColumnSpan="2"
                                          Background="White"
                                          BorderBrush="Black"
                                          BorderThickness="1,1,1,1" />
                                        <Border 
                                          x:Name="BorderComp" 
                                          Grid.Column="0"
                                          Margin="1" 
                                          Background="White"
                                          BorderBrush="Black"
                                          BorderThickness="0,0,0,0" >
                                            <TextBlock Text="{Binding Text, Mode=OneWay}" 
                                                       TextTrimming="CharacterEllipsis" 
                                                       IsEnabled="{Binding  Path=IsEnabled,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}"
                                                       Padding="3" >
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Setter Property="Background" Value="White"></Setter>
                                                        <Style.Triggers>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Background"   Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Border>
                                        <Path 
                                          x:Name="Arrow"
                                          Grid.Column="1"     
                                          Fill="Black"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="M 0 0 L 4 4 L 8 0 Z"/>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>


                        <Popup 
                        Name="Popup"
                        Placement="Bottom"                        
                        AllowsTransparency="True" 
                       Focusable="False"  IsOpen="{TemplateBinding IsDropDownOpen}"
                        PopupAnimation="Slide">
                            <Grid 
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"  
                            MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                    x:Name="DropDownBorder" 
                                   BorderThickness="1" Background="White"
                                    BorderBrush="Black"/>

                                <StackPanel  Margin="4,6,4,6" Orientation="Vertical">
                                    <Border Padding="5" BorderThickness="0,0,0,0" BorderBrush="LightGray"  Visibility="{Binding Path=IsAllVisible, Converter={StaticResource VisibleIfTrueConverter}}">
                                        <CheckBox Content="All" IsChecked="{Binding IsAllChecked, Mode=OneWay}"                                                 
                                                  Command="{Binding CheckAllCommand}"
                                                  CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" />
                                    </Border>
                                    <Border Height="1" Margin="10,5,10,5" Background="LightGray" Visibility="{Binding Path=IsAllVisible, Converter={StaticResource VisibleIfTrueConverter}}"/>
                                    <ScrollViewer SnapsToDevicePixels="True" DataContext="{Binding}"  CanContentScroll="True" MaxHeight="200">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Local" PreviewMouseLeftButtonUp="StackPanel_MouseLeftButtonUp" />
                                    </ScrollViewer>
                                </StackPanel>

                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ComboBox.Template>
        </ComboBox>
    </Grid>
</UserControl>
